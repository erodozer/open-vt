name: Build GDCubism
inputs:
  platform:
    description: "target platform to build for"
    required: true
    default: "linux"
env:
  project: gd_cubism
  extension: libgd_cubism
runs:
  using: "composite"
  steps:
    - id: cache-key
      shell: bash
      run: |
        echo "key=gdcubism_$(git rev-parse HEAD:thirdparty/gd_cubism)" >> "$GITHUB_OUTPUT"
    - name: Cache GDCubism
      id: cache
      uses: actions/cache@v4
      with:
        key: ${{ steps.cache-key.outputs.key }}
        path: addons/gd_cubism
    # skip everything if cache found
    - name: Install cmake
      if: steps.cache.outputs.cache-hit != 'true'
      uses: lukka/get-cmake@latest
    - name: Install Python
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Install scons
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: pip install scons==4.8.1
    - name: Download Cubism Library
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      working-directory: thirdparty/gd_cubism
      run: |
        curl -o sdk.zip https://cubism.live2d.com/sdk-native/bin/CubismSdkForNative-5-r.3.zip
        unzip -o sdk.zip -d thirdparty
        rm sdk.zip
    - name: Build extension
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: thirdparty/gd_cubism
      shell: bash
      run: |
        scons target='template_release' platform='${{ inputs.platform }}' arch='x86_64' -j2
    - name: Package files
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        rm -r thirdparty/gd_cubism/demo/addons/gd_cubism/cs thirdparty/gd_cubism/demo/addons/gd_cubism/example
        cp -r thirdparty/gd_cubism/demo/addons/gd_cubism addons
    - name: Log completion
      shell: bash
      run: find addons/gd_cubism -type f